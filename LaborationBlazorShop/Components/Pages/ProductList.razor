@page "/productlist"
@page "/productlist/{ProductId:int}"
@inject ProductService productService
@inject NavigationManager navigationManager
@inject CurrencyService currencyService
@inject CartService cartService
@inject UserService userService
@inject HttpClient httpClient
@inject ApplicationDbContext db
@inject AuthenticationStateProvider authenticationStateProvider
@inject UserManager<ApplicationUser> userManager
@rendermode InteractiveServer
@attribute [StreamRendering]

<Navbar />

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-end">
            <button @onclick="RedirectToCheckout" class="btn btn-primary">Go to checkout</button>
        </div>
        <h5 class="text-primary">Shopping Cart:</h5>

        @foreach (var product in cartService.ShoppingCart)
        {
            <p class="mb-0 text-info">@product.Title</p>
        }
        <br/>

        <div>
        @if (Products == null)
        {
            <p>Loading...</p>
        }

        else
        {
            if (ProductId is null)
            {
                <h3>Products</h3>

                <ul class="list-unstyled">
                    @foreach (var product in Products)
                    {
                        <ViewProducts ProductInfo="product" ExchangeRate="currencyService.ExchangeRate" SelectedCurrency="currencyService.SelectedCurrency" OnAddToCart="async () => AddProduct(product)" />
                    }
                </ul>
            }
            else
            {
                <SingleProduct ProductInfo="SingleProduct" ExchangeRate="currencyService.ExchangeRate" SelectedCurrency="currencyService.SelectedCurrency" OnAddToCart="async () => AddProduct(SingleProduct)" />
            }
        }
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="d-flex justify-content-end"> 
            <button @onclick="RedirectToLogin" class="btn btn-primary">Go to checkout</button>
        </div>
        <br />
        <div>
            @if (Products == null)
            {
                <p>Loading...</p>
            }

            else
            {
                if (ProductId is null)
                {
                    <h3>Products</h3>

                    <ul class="list-unstyled">
                        @foreach (var product in Products)
                        {
                            <ViewProducts ProductInfo="product" ExchangeRate="currencyService.ExchangeRate" SelectedCurrency="currencyService.SelectedCurrency" OnAddToCart=" () => RedirectToLogin()" />
                        }
                    </ul>
                }
                else
                {
                    <SingleProduct ProductInfo="SingleProduct" ExchangeRate="currencyService.ExchangeRate" SelectedCurrency="currencyService.SelectedCurrency" OnAddToCart="() => RedirectToLogin()" />
                }
            }
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {

    [Parameter]
    public int? ProductId { get; set; }

    private List<Product> Products = new();

    private Product SingleProduct = new();

    public string? UserId;

    public async void AddProduct(Product product)
    {
        await cartService.AddToCart(product, UserId);
        StateHasChanged();
    }

    private void RedirectToCheckout()
    {
        navigationManager.NavigateTo("/checkout");
    }

    private void RedirectToLogin()
    {
        navigationManager.NavigateTo("/Account/Login");
    }

    private void OnStateChange()
    {
        InvokeAsync(() => StateHasChanged());
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currencyService.OnStateChange += OnStateChange;

            var CheckauthState = await userService.IsUserAuthenticated();

            UserId = CheckauthState;

            if (ProductId is null)
            {
                Products = await productService.GetAllProducts();
            }
            else
            {
                var result = await productService.GetProductById((int)ProductId);
                if (result is not null)
                {
                    SingleProduct = result;
                }
            }
            StateHasChanged();
        }
    } 
}
